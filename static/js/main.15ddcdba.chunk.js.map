{"version":3,"sources":["contexts/context.js","components/graph.js","contexts/reducer.js","services/location.service.js","hooks/location.hook.js","services/openweather.service.js","components/input.js","components/forecastcard.js","components/currentcard.js","pages/index.js","App.js","index.js"],"names":["DataContext","createContext","Graph","data","useContext","graphRef","useRef","Chart","registry","getPlugin","positioners","above","el","x","element","y","chartData","labels","weather","daily","map","i","datasets","temp","max","fill","target","darkMode","below","options","plugins","legend","display","tooltip","enabled","usePointStyle","position","backgroundColor","displayColors","bodyFontSize","bodyColor","bodyFont","weight","size","family","callbacks","title","label","context","raw","text","color","font","align","padding","bottom","top","responsive","maintainAspectRatio","scales","ticks","grid","drawBorder","elements","line","borderWidth","tension","borderColor","borderDashOffset","point","hoverRadius","pointRadius","pointBorderColor","hoverBorderWidth","borderCapStyle","events","useEffect","current","setActiveElements","datasetIndex","index","activeIndex","update","getActiveElements","updatePointerColor","type","width","height","ref","initialState","loading","city","value","description","place_id","reference","localStorage","getItem","actions","dataReducer","state","action","payload","setItem","getLocationByCoordinates","a","axios","get","lat","lng","useGetLocation","navigator","Promise","resolve","reject","geolocation","getCurrentPosition","then","res","coords","latitude","longitude","catch","_","getWeatherFromCoordinates","response","Input","dispatch","useState","location","setLocation","locationcoordinates","notify","msg","toast","error","getCoordinates","address","getLatLng","getWeather","coord","loc","locationweather","results","formatted_address","locationcity","getLocation","e","geocodeByAddress","err","selectProps","placeholder","noOptionsMessage","onSelect","onChange","className","styles","input","outline","border","control","provided","boxShadow","apiKey","process","ForecastCard","show","slide","swiping","dt","onClick","moment","Date","format","icon","humidity","getItems","CurrentCard","datestamp","main","wind_speed","toFixed","IndexPage","undefined","window","root","document","documentElement","classList","remove","add","checked","checkedIcon","uncheckedIcon","offColor","onColor","handleDiameter","activeBoxShadow","style","justifyContent","alignItems","textAlign","css","href","App","useReducer","Provider","rootElement","getElementById","ReactDOM","render"],"mappings":"2MAIeA,EAFKC,0B,OCqKLC,EAnKD,WAAO,IAAD,IACXC,EAAUC,qBAAWJ,GAArBG,KAEDE,EAAWC,mBAEKC,IAAMC,SAASC,UAAU,WACjCC,YAAYC,MAAQ,SAACC,GAC/B,MAAO,CACHC,EAAGD,EAAG,GAAGE,QAAQD,EAAI,GACrBE,EAAGH,EAAG,GAAGE,QAAQC,EAAI,KAI7B,IAAMC,EAAY,CAChBC,OAAM,OAAEd,QAAF,IAAEA,GAAF,UAAEA,EAAMe,eAAR,aAAE,EAAeC,MAAMC,KAAI,SAACP,EAAEQ,GAAH,MAAS,QAAQA,KAElDC,SAAU,CACR,CACEnB,KAAI,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAMe,eAAR,aAAE,EAAeC,MAAMC,KAAI,SAAAP,GAAC,OAAIA,EAAEU,KAAKC,OAC3CC,KACA,CACEC,OAAQ,SACRf,MAAOR,EAAKwB,SAAW,UAAY,UACnCC,MAAOzB,EAAKwB,SAAW,UAAY,cAOrCE,EAAU,CACdC,QAAS,CACPC,OAAQ,CACNC,SAAS,GAEXC,QAAS,CACPC,SAAS,EACTC,eAAe,EACfC,SAAU,QACVC,gBAAiB,cACjBC,eAAe,EACfC,aAAc,GACdC,UAAWrC,EAAKwB,SAAW,UAAY,UACvCc,SAAU,CACRC,OAAQ,OACRC,KAAM,GACNC,OAAQ,yBAEVC,UAAW,CACTC,MAAO,iBAAM,IACbC,MAFS,SAEHC,GACJ,OAAOA,EAAQC,IAAM,WAI3BH,MAAO,CACLd,SAAS,EACTkB,KAAM,kBACNC,MAAOhD,EAAKwB,SAAW,UAAY,UACnCyB,KAAM,CACJV,OAAQ,MACRC,KAAM,MAERU,MAAO,QACPC,QAAS,CAAEC,OAAQ,IAAKC,IAAK,KAGjCC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACN9C,EAAG,CACD+C,MAAO,CACL5B,SAAS,GAEX6B,KAAK,CACH7B,SAAS,EACT8B,YAAY,IAGhB/C,EAAG,CACD6C,MAAO,CACL5B,SAAS,GAEX6B,KAAK,CACH7B,SAAS,EACT8B,YAAY,KAIlBC,SAAU,CACRC,KAAM,CAGJ3B,gBAAiBlC,EAAKwB,SAAW,UAAY,UAC7CsC,YAAa,EACbC,QAAS,GAETC,YAAahE,EAAKwB,SAAW,UAAY,UACzCyC,iBAAkB,GAClB3C,MAAM,GAER4C,MAAO,CACLhC,gBAAiBlC,EAAKwB,SAAW,UAAY,UAC7C2C,YAAa,GACbC,YAAa,EACbC,iBAAkB,OAClBL,YAAa,OACbF,YAAa,EACbQ,iBAAkB,EAClBL,iBAAkB,GAClBM,eAAgB,UAGpBC,OAAQ,IAmCV,OAhCAC,qBAAU,WAyBY,MAAhBzE,EAAKe,SAAmBb,EAASwE,UAhBnCxE,EAASwE,QAAQC,kBAAkB,CACjC,CACEC,aAAc,EACdC,MAAO7E,EAAK8E,eAIhB5E,EAASwE,QAAQ5C,QAAQ6C,kBAAkB,CACzC,CAAEC,aAAc,EAAGC,MAAO7E,EAAK8E,eAGjC5E,EAASwE,QAAQ5C,QAAQiD,SACzB7E,EAASwE,QAAQK,SApBQ,WACzB,IAAMb,EAAQhE,EAASwE,QAAQM,oBAC/Bd,EAAM,GAAGvD,QAAQe,QAAQsC,YAAc,OACvCE,EAAM,GAAGvD,QAAQe,QAAQQ,gBAAkBlC,EAAKwB,SAAW,UAAY,UACvEtB,EAASwE,QAAQK,SAiBjBE,MAOD,CAACjF,EAAME,IAIR,mCAEE,cAAC,IAAD,CACEgF,KAAK,OACLlF,KAAMa,EACNsE,MAAO,IACPC,OAAQ,IACR1D,QAASA,EACT2D,IAAKnF,O,+CCjKPoF,EAAe,CACjBC,SAAS,EACTC,KAAM,CACJ5C,MAAO,aACP6C,MAAO,CACLC,YAAa,aACbC,SAAU,8BACVC,UAAW,gCAGf7E,QAAS,KACT+D,YAAa,EACbtD,SAA2C,SAAjCqE,aAAaC,QAAQ,SAG3BC,EACQ,aADRA,EAEW,gBAFXA,EAGO,YAHPA,EAIc,mBAJdA,EAKS,cALTA,EAMK,UAGLC,EAAc,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCACpD,OAAQA,EAAOhB,MACb,KAAKa,EACH,OAAO,2BACFE,GADL,IAEET,KAAMU,EAAOC,UAGjB,KAAKJ,EACH,OAAO,2BACFE,GADL,IAEElF,QAASmF,EAAOC,UAGpB,KAAKJ,EACH,OAAO,2BACFE,GADL,IAEEV,SAAS,IAGb,KAAKQ,EACH,OAAO,2BACFE,GADL,IAEEV,SAAS,IAGb,KAAKQ,EACH,OAAO,2BACFE,GADL,IAEEnB,YAAaoB,EAAOC,UAGxB,KAAKJ,EAEH,OADAF,aAAaO,QAAQ,QAASH,EAAMzE,UAC7B,2BACFyE,GADL,IAEEzE,UAAWyE,EAAMzE,WAGrB,QACE,OAAOyE,I,iBCpDTI,EAAwB,uCAAG,WAAOrG,GAAP,eAAAsG,EAAA,sEACZC,IAAMC,IAAI,iFACzBxG,EAAKyG,IAAM,IAAMzG,EAAK0G,IADG,gDADE,cACzBlB,EADyB,yBAIxBA,EAAKxF,MAJmB,2CAAH,sDCmBb2G,EA1BQ,WAErB,MDJK,gBAAiBC,UAIjB,IAAIC,SAAQ,SAACC,EAASC,GAAV,OACjBH,UAAUI,YAAYC,mBAAmBH,EAASC,MCAxBG,MAAK,SAACC,GAC5B,MAAO,CACLV,IAAKU,EAAIC,OAAOC,SAChBX,IAAKS,EAAIC,OAAOE,cAEjBC,OAAM,SAAAC,GACP,OAAO,IAAIX,SAAQ,SAACM,GAAD,OACjBA,EAAI,CACFV,IAAK,UACLC,KAAM,gBAKL,IAAIG,SAAQ,SAACM,GAAD,OACjBA,EAAI,CACFV,IAAK,UACLC,KAAM,cCvBVe,EAAyB,uCAAG,WAAOzH,GAAP,eAAAsG,EAAA,sEACTC,IAAMC,IAC3B,sEAAsExG,EAAKyG,IAAI,QAAQzG,EAAK0G,IAA5F,mEAF8B,cAC1BgB,EAD0B,yBAIzBA,EAAS1H,MAJgB,2CAAH,sDCwHhB2H,G,MA7GD,WACZ,MAAuB1H,qBAAWJ,GAAxB+H,GAAV,EAAOJ,EAAP,EAAUI,UACV,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAsBrB,IAEtBsB,EAAS,SAACC,GAAD,OAASC,IAAMC,MAAMF,IAM9BG,EAAiB,SAACC,GACtB,OAAOC,YAAUD,EAAQ,KAGrBE,EAAa,SAACC,GAClB,OAAOhB,EAA0BgB,IAGnChE,qBAAU,WACRmD,EAAS,CAAE1C,KAAMa,IAiCjBiC,EAAoBd,MAAK,SAACwB,IAhCF,SAACA,GACvBjB,EAA0BiB,GACvBxB,MAAK,SAACC,GACLS,EAAS,CAAE1C,KAAMa,EAAuBI,QAASgB,OAElDI,OAAM,SAAAC,GACLS,EAAO,yCA2BXU,CAAgBD,GAvBG,SAACA,GACpBrC,EAAyBqC,GACtBxB,MAAK,SAACC,GACL,IAAMhB,EAAU,CACdvD,MAAOuE,EAAIyB,QAAQ,GAAGC,kBACtBpD,MAAO,CACLC,YAAayB,EAAIyB,QAAQ,GAAGC,kBAC5BlD,SAAUwB,EAAIyB,QAAQ,GAAGjD,SACzBC,UAAWuB,EAAIyB,QAAQ,GAAGjD,WAG9BiC,EAAS,CACP1C,KAAMa,EACNI,YAEF4B,EAAY5B,MAEboB,OAAM,SAAAC,GACLS,EAAO,4CAMXa,CAAaJ,GACbd,EAAS,CAAE1C,KAAMa,OAChBwB,OAAM,SAAAC,GACPS,EAAO,8BACPL,EAAS,CAAE1C,KAAMa,SAElB,IAEH,IAAMgD,EAAW,uCAAG,WAAOC,GAAP,eAAA1C,EAAA,6DAClBsB,EAAS,CAAE1C,KAAMa,IACjBgC,EAAYiB,GAFM,UAxDApG,EA2DaoG,EAAEpG,MA1D1BqG,YAAiBrG,IA0DgBsE,KAAKmB,GAH3B,OAGZI,EAHY,OAIlBD,EAAWC,GACRvB,MAAK,SAACC,GACLS,EAAS,CAAE1C,KAAMa,EAAuBI,QAASgB,IACjDS,EAAS,CAAE1C,KAAMa,EAAoBI,QAAS6C,IAC9CpB,EAAS,CAAE1C,KAAMa,OAElBwB,OAAM,SAAC2B,GACNjB,EAAO,iBAAmBiB,GAC1BtB,EAAS,CAAE1C,KAAMa,OAZH,iCAxDD,IAACnD,IAwDA,OAAH,sDAejB,OACE,qCACE,cAAC,IAAD,CACEuG,YAAa,CACXC,YAAa,qBACbC,iBAAkB,iBAAM,mBACxB5D,MAAOqC,EAEPwB,SAAUP,EACVQ,SAAUR,EACVS,UAAW,wCACXC,OAAQ,CACPC,MAAO,iBAAO,CACbC,QAAS,OACTC,OAAQ,SAETC,QAAS,SAACC,GAAD,mBAAC,eACLA,GADI,IAEPH,QAAS,OACTI,UAAW,OACX/F,YAAa,uBAIlBgG,OAAQC,4CAEV,cAAC,IAAD,S,yBC9EWC,EAjCI,WACjB,MAAyBjK,qBAAWJ,GAA7BG,EAAP,EAAOA,KAAM4H,EAAb,EAAaA,SAuBb,OACE,qBAAK4B,UAAU,uBAAf,SACE,cAAC,IAAD,CAAmBW,KAAM,IAAKC,MAAO,EAAGC,SAAO,EAACb,UAAU,sCAA1D,SAfa,WAAO,IAAD,IACrB,cAAOxJ,QAAP,IAAOA,GAAP,UAAOA,EAAMe,eAAb,iBAAO,EAAeC,aAAtB,aAAO,EAAsBC,KAAI,SAACP,EAAGQ,GAAO,IAAD,EAT5BoJ,EAUb,OACI,sBAAKC,QAAS,WANpB3C,EAAS,CAAC1C,KAAMa,EAAmBI,QAMAjF,KAAYsI,UAAWxJ,EAAK8E,cAAgB5D,EAAI,qGAAuG,mFAApL,UACE,oBAAIsI,UAAU,YAAd,SAAiC,IAANtI,EAAU,SAZ9BoJ,EAYgD5J,EAAE4J,GAX1DE,IAAO,IAAIC,KAAQ,IAAHH,IAAUI,OAAO,cAYhC,mBAAGlB,UAAW,4BAAsB9I,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAGK,QAAQ,UAAjC,aAAsB,EAAe4J,QACnD,mBAAGnB,UAAYxJ,EAAK8E,cAAgB5D,EAAI,4CAA8C,4BAAtF,sBACA,uBAAMsI,UAAYxJ,EAAK8E,cAAgB5D,EAAI,4CAA8C,4BAAzF,iBAAwHR,QAAxH,IAAwHA,OAAxH,EAAwHA,EAAGkK,SAA3H,SAJoC1J,MAavC2J,Q,iBCIIC,EAjCK,WAAO,IAAD,4BACjB9K,EAAUC,qBAAWJ,GAArBG,KACD+K,GAAgB,OAAJ/K,QAAI,IAAJA,OAAA,EAAAA,EAAMe,SAAU,IAAI0J,KAAgC,KAAvB,OAAJzK,QAAI,IAAJA,GAAA,UAAAA,EAAMe,eAAN,mBAAe2D,eAAf,eAAwB4F,KAAW,KAE9E,OACE,qBAAKd,UAAU,sDAAf,UACO,OAAJxJ,QAAI,IAAJA,OAAA,EAAAA,EAAMe,UACP,qCACE,oBAAGyI,UAAU,0BAAb,UACE,cAAC,IAAD,CAAQkB,OAAO,qBAAf,SAAqCK,IAAmB,uBACxD,cAAC,IAAD,CAAQL,OAAO,YAAf,SAA4BK,OAE9B,sBAAKvB,UAAU,6CAAf,UACE,mBAAGA,UAAW,4BAAsBxJ,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAMe,eAA5B,iBAAsB,EAAe2D,eAArC,iBAAsB,EAAwB3D,QAAQ,UAAtD,aAAsB,EAAoC4J,QACxE,oBAAGnB,UAAU,0BAAb,iBAAwCxJ,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAMe,eAA9C,iBAAwC,EAAe2D,eAAvD,aAAwC,EAAwBtD,KAAhE,eAEF,mBAAGoI,UAAU,iCAAb,gBAA+CxJ,QAA/C,IAA+CA,GAA/C,UAA+CA,EAAMe,eAArD,iBAA+C,EAAe2D,eAA9D,iBAA+C,EAAwB3D,QAAQ,UAA/E,aAA+C,EAAoCiK,OACnF,sBAAKxB,UAAU,uDAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,mBAAGA,UAAU,4BAAb,sBACA,uBAAMA,UAAU,+BAAhB,iBAAgDxJ,QAAhD,IAAgDA,GAAhD,UAAgDA,EAAMe,eAAtD,iBAAgD,EAAe2D,eAA/D,aAAgD,EAAwBkG,SAAxE,UAEF,sBAAKpB,UAAU,uBAAf,UACE,mBAAGA,UAAU,4BAAb,wBACA,uBAAMA,UAAU,0BAAhB,WAAiF,MAAjC,OAAJxJ,QAAI,IAAJA,GAAA,UAAAA,EAAMe,eAAN,mBAAe2D,eAAf,eAAwBuG,aAAmBC,QAAQ,GAA/F,wB,yBC6DGC,EA/EG,WAChB,MAA2BlL,qBAAWJ,GAA9BG,EAAR,EAAQA,KAAM4H,EAAd,EAAcA,SAEdnD,qBAAU,WACR,QAAe2G,IAAXC,OAAJ,CACA,IAAMC,EAAOD,OAAOE,SAASC,gBAC7BF,EAAKG,UAAUC,OAAO1L,EAAKwB,SAAW,QAAU,QAChD8J,EAAKG,UAAUE,IAAI3L,EAAKwB,SAAW,OAAS,YAC3C,CAACxB,IAMJ,OACE,mCACE,0BAASwJ,UAAU,kDAAnB,UACE,yBAAQA,UAAU,yEAAlB,UACE,qBAAKA,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,QAGJ,qBAAKA,UAAU,yBAAf,SACE,cAAC,IAAD,CACED,SAfW,WACrB3B,EAAS,CAAE1C,KAAMa,KAeP6F,QAAS5L,EAAKwB,SACdqK,YAAa,+CACbC,cAAe,+CACfC,SAAU,UACVC,QAAS,UACT5G,OAAQ,GACRD,MAAO,GACP8G,eAAgB,GAChBlC,UAAU,iCACVmC,gBAAgB,6CAItB,qBAAK1C,UAAU,wCAAf,SAEIxJ,EAAKuF,QAEH,mCACE,qBAAKiE,UAAU,gBAAgB2C,MAAO,CACpCtK,QAAS,OACTuK,eAAgB,SAChBC,WAAY,SACZC,UAAW,QAJb,SAME,cAAC,aAAD,CAAYtJ,MAAOhD,EAAKwB,SAAW,UAAY,UAAW+D,QAASvF,EAAKuF,QAASgH,IAAK,GAAI/J,KAAM,UAIpG,qCACE,qBAAKgH,UAAU,mCAAf,SACE,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,QAGJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,cAMZ,yBAAQA,UAAU,8CAAlB,oBACU,mBAAGgD,KAAK,+BAA+BjL,OAAO,UAA9C,6BC7EH,SAASkL,IACtB,MAAyBC,qBAAW1G,EAAaV,GAAjD,mBAAOtF,EAAP,KAAa4H,EAAb,KACA,OACE,cAAC,EAAY+E,SAAb,CAAsBlH,MAAO,CAAEzF,OAAM4H,YAArC,SACE,cAAC,EAAD,MCFN,IAAMgF,EAAcrB,SAASsB,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFG,K","file":"static/js/main.15ddcdba.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst DataContext = createContext();\r\n\r\nexport default DataContext;\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport { Line, Chart } from 'react-chartjs-2';\r\nimport DataContext from \"../contexts/context\";\r\n\r\nconst Graph = () => {\r\n  const {data, } = useContext(DataContext);\r\n\r\n  const graphRef = useRef();\r\n\r\n  const tooltipPlugin = Chart.registry.getPlugin('tooltip');\r\n  tooltipPlugin.positioners.above = (el) => {\r\n      return {\r\n          x: el[0].element.x - 30,\r\n          y: el[0].element.y - 30\r\n      };\r\n  };\r\n \r\n  const chartData = {\r\n    labels: data?.weather?.daily.map((x,i) => 'Nov. '+i),\r\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\r\n    datasets: [\r\n      {\r\n        data: data?.weather?.daily.map(x => x.temp.max),\r\n        fill: \r\n        {\r\n          target: 'origin',\r\n          above: data.darkMode ? '#047857' : '#eef4fe',   // Area will be red above the origin\r\n          below: data.darkMode ? '#047857' : '#eef4fe'   // And blue below the origin\r\n        }\r\n      }\r\n    ]\r\n}\r\n\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        usePointStyle: true,\r\n        position: 'above',\r\n        backgroundColor: 'transparent',\r\n        displayColors: false,\r\n        bodyFontSize: 22,\r\n        bodyColor: data.darkMode ? '#6ee7b7' : '#5596f6',\r\n        bodyFont: {\r\n          weight: 'bold',\r\n          size: 15,\r\n          family: 'Open Sans, sans-serif',\r\n        },\r\n        callbacks: {\r\n          title: () => '',\r\n          label(context) {\r\n            return context.raw + '°F';\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Max Temperature',\r\n        color: data.darkMode ? '#6b7280' : '#4b5563',\r\n        font: {\r\n          weight: '700',\r\n          size: '16'\r\n        },\r\n        align: 'start',\r\n        padding: { bottom: 100, top: 5 }\r\n      },\r\n    },\r\n    responsive: true,    \r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          display: false\r\n        },\r\n        grid:{\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      },\r\n      y: {\r\n        ticks: {\r\n          display: false\r\n        },\r\n        grid:{\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      line: {\r\n        // padding: 10,\r\n        // you can set indiviual colors for each bar\r\n        backgroundColor: data.darkMode ? '#6ee7b7' : '#5596f6',\r\n        borderWidth: 3,\r\n        tension: 0.4,\r\n        // stepped: true,\r\n        borderColor: data.darkMode ? '#6ee7b7' : '#5596f6',\r\n        borderDashOffset: 0.3,\r\n        fill: true,\r\n      },\r\n      point: {\r\n        backgroundColor: data.darkMode ? '#047857' : '#5596f6',\r\n        hoverRadius: 10,\r\n        pointRadius: 0,\r\n        pointBorderColor: '#fff', \r\n        borderColor: '#fff',\r\n        borderWidth: 0, \r\n        hoverBorderWidth: 4,\r\n        borderDashOffset: 0.2,\r\n        borderCapStyle: 'round',\r\n      }\r\n    },\r\n    events: []\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updatePointerColor = () => {\r\n      const point = graphRef.current.getActiveElements();\r\n      point[0].element.options.borderColor = '#fff';\r\n      point[0].element.options.backgroundColor = data.darkMode ? '#047857' : '#5596f6';\r\n      graphRef.current.update();\r\n    }\r\n\r\n    const setActive = () => {\r\n      graphRef.current.setActiveElements([\r\n        {\r\n          datasetIndex: 0,\r\n          index: data.activeIndex,\r\n        }\r\n      ]);\r\n  \r\n      graphRef.current.tooltip.setActiveElements([\r\n        { datasetIndex: 0, index: data.activeIndex }\r\n      ]);\r\n  \r\n      graphRef.current.tooltip.update();\r\n      graphRef.current.update();\r\n      updatePointerColor();\r\n    };\r\n\r\n    if (data.weather != null && graphRef.current) {\r\n      setActive();      \r\n    }\r\n\r\n  }, [data, graphRef])\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <ReactApexChart options={graph.options} series={graph.series} type=\"area\" height={250} /> */}\r\n      <Line \r\n        type=\"area\" \r\n        data={chartData}\r\n        width={100}\r\n        height={250}\r\n        options={options}\r\n        ref={graphRef}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","const initialState = {\r\n    loading: false,\r\n    city: {\r\n      label: \"London, Uk\",\r\n      value: {\r\n        description: \"London, UK\",\r\n        place_id: \"ChIJdd4hrwug2EcRmSrV3Vo6llI\",\r\n        reference: \"ChIJdd4hrwug2EcRmSrV3Vo6llI\"\r\n      }\r\n    },\r\n    weather: null,\r\n    activeIndex: 0,\r\n    darkMode: localStorage.getItem('dark') === 'true' ? true : false\r\n  };\r\n  \r\n  const actions = {\r\n    FETCH_CITY: \"FETCH_CITY\",\r\n    FETCH_WEATHER: \"FETCH_WEATHER\",\r\n    SET_INDEX: \"SET_INDEX\",\r\n    TOGGLE_DARK_MODE: \"TOGGLE_DARK_MODE\",\r\n    STOP_LOADER: \"STOP_LOADER\",\r\n    LOADING: \"LOADING\"\r\n  };\r\n  \r\n  const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case actions.FETCH_CITY: {\r\n        return {\r\n          ...state,\r\n          city: action.payload\r\n        };\r\n      }\r\n      case actions.FETCH_WEATHER: {\r\n        return {\r\n          ...state,\r\n          weather: action.payload\r\n        };\r\n      }\r\n      case actions.LOADING: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      }\r\n      case actions.STOP_LOADER: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        };\r\n      }\r\n      case actions.SET_INDEX: {\r\n        return {\r\n          ...state,\r\n          activeIndex: action.payload\r\n        };\r\n      }\r\n      case actions.TOGGLE_DARK_MODE: {\r\n        localStorage.setItem('dark', !state.darkMode);\r\n        return {\r\n          ...state,\r\n          darkMode: !state.darkMode\r\n        };\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export { initialState, dataReducer, actions };\r\n  ","import axios from \"axios\";\r\n\r\nconst isGeoLocationApiAvailable = () => {\r\n  return \"geolocation\" in navigator ? true : false;\r\n};\r\n\r\nconst getCoordinates = () => {\r\n  return new Promise((resolve, reject) =>\r\n    navigator.geolocation.getCurrentPosition(resolve, reject)\r\n  );\r\n};\r\n\r\nconst getLocationByCoordinates = async (data) => {\r\n  const city = await axios.get('https://maps.googleapis.com/maps/api/geocode/json?result_type=locality&latlng=' +\r\n      data.lat + ',' + data.lng + '&key='+process.env.REACT_APP_GOOGLE_API_KEY\r\n  );\r\n  return city.data;\r\n};\r\n\r\nconst getPicture = async (loc) => {\r\n  const photo = await axios.get(\r\n    'https://maps.googleapis.com/maps/api/place/findplacefromtext/json?inputtype=textquery&fields=name,photos&input='+ loc + '&key=' + process.env.REACT_APP_GOOGLE_API_KEY\r\n  );\r\n  return photo.data;\r\n}\r\n\r\nexport { isGeoLocationApiAvailable, getCoordinates, getLocationByCoordinates, getPicture };\r\n","import {\r\n    getCoordinates,\r\n    isGeoLocationApiAvailable\r\n  } from \"../services/location.service\";\r\n  \r\n  const useGetLocation = () => {\r\n    // Default coordinates is London\r\n    if (isGeoLocationApiAvailable()) {\r\n      return getCoordinates().then((res) => {\r\n        return {\r\n          lat: res.coords.latitude,\r\n          lng: res.coords.longitude\r\n        };\r\n      }).catch(_ => {\r\n        return new Promise((res) =>\r\n          res({\r\n            lat: 51.509865,\r\n            lng: -0.118092\r\n          })\r\n        );\r\n      });\r\n    } else {\r\n      return new Promise((res) =>\r\n        res({\r\n          lat: 51.509865,\r\n          lng: -0.118092\r\n        })\r\n      );\r\n    }\r\n  };\r\n  \r\n  export default useGetLocation;\r\n  ","import axios from \"axios\";\r\n\r\nconst getWeatherFromCoordinates = async (data) => {\r\n  const response = await axios.get(\r\n    'https://api.openweathermap.org/data/2.5/onecall?units=Imperial&lat='+data.lat+'&lon='+data.lng+'&exclude=hourly,minutely&appid='+process.env.REACT_APP_OPEN_WEATHER_KEY\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport { getWeatherFromCoordinates };\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport GooglePlacesAutocomplete, {\r\n  getLatLng,\r\n  geocodeByAddress\r\n} from \"react-google-places-autocomplete\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport DataContext from \"../contexts/context\";\r\nimport { actions } from \"../contexts/reducer\";\r\nimport useGetLocation from \"../hooks/location.hook\";\r\nimport { getLocationByCoordinates } from \"../services/location.service\";\r\nimport { getWeatherFromCoordinates } from \"../services/openweather.service\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst Input = () => {\r\n  const {_, dispatch } = useContext(DataContext);\r\n  const [location, setLocation] = useState(null);\r\n  const locationcoordinates = useGetLocation();\r\n\r\n  const notify = (msg) => toast.error(msg);\r\n\r\n  const getAddress = (label) => {\r\n    return geocodeByAddress(label);\r\n  };\r\n\r\n  const getCoordinates = (address) => {\r\n    return getLatLng(address[0]);\r\n  };\r\n\r\n  const getWeather = (coord) => {\r\n    return getWeatherFromCoordinates(coord);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: actions.LOADING });\r\n    const locationweather = (loc) => {\r\n      getWeatherFromCoordinates(loc)\r\n        .then((res) => {\r\n          dispatch({ type: actions.FETCH_WEATHER, payload: res });\r\n        })\r\n        .catch(_ => {\r\n          notify('Could not get weather information!')\r\n        });\r\n    };\r\n\r\n    const locationcity = (loc) => {\r\n      getLocationByCoordinates(loc)\r\n        .then((res) => {\r\n          const payload = {\r\n            label: res.results[0].formatted_address,\r\n            value: {\r\n              description: res.results[0].formatted_address,\r\n              place_id: res.results[0].place_id,\r\n              reference: res.results[0].place_id\r\n            }\r\n          };\r\n          dispatch({\r\n            type: actions.FETCH_CITY,\r\n            payload\r\n          });\r\n          setLocation(payload);\r\n        })\r\n        .catch(_ => {\r\n          notify('Could not fetch location information!')\r\n        });\r\n    };\r\n\r\n    locationcoordinates.then((loc) => {\r\n      locationweather(loc);\r\n      locationcity(loc);\r\n      dispatch({ type: actions.STOP_LOADER });\r\n    }).catch(_ => {\r\n      notify('Could not get coordinates!')\r\n      dispatch({ type: actions.STOP_LOADER });\r\n    });\r\n  }, []);\r\n\r\n  const getLocation = async (e) => {\r\n    dispatch({ type: actions.LOADING });\r\n    setLocation(e);\r\n    const coord = await getAddress(e.label).then(getCoordinates);\r\n    getWeather(coord)\r\n      .then((res) => {\r\n        dispatch({ type: actions.FETCH_WEATHER, payload: res });\r\n        dispatch({ type: actions.FETCH_CITY, payload: e });\r\n        dispatch({ type: actions.STOP_LOADER });\r\n      })\r\n      .catch((err) => {\r\n        notify('Network Error:' + err)\r\n        dispatch({ type: actions.STOP_LOADER });\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <GooglePlacesAutocomplete\r\n        selectProps={{\r\n          placeholder: \"Type to select ...\",\r\n          noOptionsMessage: () => 'Search location',\r\n          value: location,\r\n          // defaultValue: location,\r\n          onSelect: getLocation,\r\n          onChange: getLocation,\r\n          className: 'outline-none md:w-96 dark:bg-gray-800',\r\n          styles: {\r\n           input: () => ({\r\n            outline: 'none',\r\n            border: 'none'\r\n           }),\r\n           control: (provided) => ({\r\n             ...provided,\r\n             outline: 'none',\r\n             boxShadow: 'none',\r\n             borderColor: 'none !important'\r\n           })\r\n          }\r\n        }}\r\n        apiKey={process.env.REACT_APP_GOOGLE_API_KEY}\r\n      />\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { ScrollingCarousel } from \"@trendyol-js/react-carousel\";\r\nimport moment from \"moment\";\r\nimport { useContext } from \"react\";\r\nimport DataContext from \"../contexts/context\";\r\nimport { actions } from \"../contexts/reducer\";\r\n\r\nconst ForecastCard = () => {\r\n    const {data, dispatch} = useContext(DataContext);\r\n\r\n    const getDate = (dt) => {\r\n      return moment(new Date(dt*1000)).format('MMM, DD');\r\n    }\r\n\r\n    const setIndex = (index) => {\r\n      dispatch({type: actions.SET_INDEX, payload: index});\r\n    }\r\n\r\n    const getItems = () => {\r\n      return data?.weather?.daily?.map((x, i) => {\r\n        return (\r\n            <div onClick={() => setIndex(i)} key={i} className={data.activeIndex === i ? 'text-center rounded-md px-10 py-6 dark:bg-green-700 bg-blue-400 text-white dark:text-gray-300 mr-4' : 'text-center rounded-md px-10 py-6 bg-transparent text-gray-500 mr-4 hover:shadow'}>\r\n              <h3 className=\"font-bold\">{i === 0 ? 'Today' : getDate(x.dt) }</h3>\r\n              <i className={'text-4xl owi owi-' + x?.weather[0]?.icon} />\r\n              <p className={ data.activeIndex === i ? 'font-normal text-white dark:text-gray-300' : 'font-normal text-gray-400' }>Humidity</p>\r\n              <span className={ data.activeIndex === i ? 'font-normal text-white dark:text-gray-300' : 'font-normal text-gray-400' }>{x?.humidity}%</span>\r\n            </div>\r\n        )\r\n      });\r\n    }\r\n    \r\n    return (\r\n      <div className=\"flex justify-between\">\r\n        <ScrollingCarousel show={4.5} slide={1} swiping className=\"flex justify-between cursor-pointer\">\r\n          {getItems()}\r\n        </ScrollingCarousel>\r\n      </div>\r\n    )\r\n  };\r\n  \r\n  export default ForecastCard;\r\n  ","import { useContext } from \"react\";\r\nimport DataContext from \"../contexts/context\";\r\nimport Moment from 'react-moment';\r\n\r\nconst CurrentCard = () => {\r\n  const {data, } = useContext(DataContext);\r\n  const datestamp = data?.weather ? new Date(data?.weather?.current?.dt*1000) : null; // 'DD/MM/YYYY').format('YYYY-MM-DD[T]HH:mm:ss');\r\n  // console.log(datestamp);\r\n  return (\r\n    <div className=\"md:pt-20 font-sans text-gray-600 dark:text-gray-500\">\r\n      {data?.weather && \r\n      <>\r\n        <p className=\"font-medium text-center\">\r\n          <Moment format=\"dddd MMMM DD, YYYY\">{datestamp}</Moment><br/>\r\n          <Moment format=\"hh : mm A\">{datestamp}</Moment>\r\n        </p>\r\n        <div className=\"mt-4 mb-0 flex items-center justify-center\">\r\n          <i className={'text-9xl owi owi-' + data?.weather?.current?.weather[0]?.icon} />\r\n          <p className=\"text-2xl font-bold ml-4\">{data?.weather?.current?.temp} °F</p>\r\n        </div>\r\n        <p className=\"text-2xl font-bold text-center\">{data?.weather?.current?.weather[0]?.main}</p>\r\n        <div className=\"my-16 flex divide-x-2 divide-gray-500 justify-center\">\r\n          <div className=\"text-right pr-6 w-1/2\">\r\n            <p className=\"text-gray-500 font-normal\">Humidity</p>\r\n            <span className=\"text-gray-600 font-bold mr-3\">{data?.weather?.current?.humidity}%</span>\r\n          </div>\r\n          <div className=\"pl-6 text-left w-1/2\">\r\n            <p className=\"text-gray-500 font-normal\">Wind Speed</p>\r\n            <span className=\"text-gray-600 font-bold\">{(data?.weather?.current?.wind_speed * 1.61).toFixed(2)} km/hr</span>\r\n          </div>\r\n        </div>\r\n      </>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentCard;\r\n","import Graph from \"../components/graph\";\r\nimport Input from \"../components/input\";\r\nimport ForecastCard from \"../components/forecastcard\";\r\nimport CurrentCard from \"../components/currentcard\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport DataContext from \"../contexts/context\";\r\nimport { actions } from \"../contexts/reducer\";\r\nimport Switch from \"react-switch\";\r\nimport { MoonLoader } from \"react-spinners\";\r\n\r\nconst IndexPage = () => {\r\n  const { data, dispatch } = useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    if (window === undefined) return\r\n    const root = window.document.documentElement\r\n    root.classList.remove(data.darkMode ? 'light' : 'dark')\r\n    root.classList.add(data.darkMode ? 'dark' : 'light')\r\n  }, [data])\r\n\r\n  const toggleDarkMode = () => {\r\n    dispatch({ type: actions.TOGGLE_DARK_MODE });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"w-100  dark:bg-gray-800 bg-gray-50 min-h-screen\">\r\n        <header className=\"pt-6 px-10 h-20 w-full shadow-md dark:bg-gray-800 flex justify-between\">\r\n          <div className=\"w-2/3 flex justify-start\">\r\n            <div className=\"md:mr-24 w-full\">\r\n              <Input />\r\n            </div>\r\n          </div>\r\n          <div className=\"w-1/3 flex justify-end\">\r\n            <Switch \r\n              onChange={toggleDarkMode} \r\n              checked={data.darkMode} \r\n              checkedIcon={<div>☀️</div>}\r\n              uncheckedIcon={<div>🌙</div>}\r\n              offColor={'#090c0c'}\r\n              onColor={'#090c0c'}\r\n              height={23}\r\n              width={48}\r\n              handleDiameter={25}\r\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n            />\r\n          </div>\r\n        </header>\r\n        <div className=\"md:flex md:space-between md:mt-2 mt-8\">\r\n          {\r\n            data.loading \r\n            ?\r\n              <>\r\n                <div className=\"mx-auto my-32\" style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  textAlign: \"left\"\r\n                }}>\r\n                  <MoonLoader color={data.darkMode ? '#047857' : '#5596f6'} loading={data.loading} css={''} size={100} />\r\n                </div>\r\n              </>\r\n            :\r\n              <> \r\n                <div className=\"dark:bg-gray-800 w-full md:w-1/3\">            \r\n                  <div className=\"pt-2\">\r\n                    <CurrentCard /> \r\n                  </div>\r\n                </div>\r\n                <div className=\"md:w-2/3 w-full\">\r\n                  <div className=\"px-8 pt-8 pb-6\">\r\n                    <Graph/> \r\n                  </div>\r\n                  <div className=\"px-10 py-2\">\r\n                    <ForecastCard />\r\n                  </div>\r\n                </div>\r\n              </>\r\n          }\r\n        </div>\r\n        <footer className=\"my-4 px-10 text-gray-400 dark:text-gray-700\">\r\n          &#8594; <a href=\"https://github.com/joxiah025\" target=\"__blank\">Github</a>\r\n        </footer>        \r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n","import IndexPage from \"./pages/index\";\r\nimport { useReducer } from \"react\";\r\nimport { dataReducer, initialState } from \"./contexts/reducer\";\r\nimport DataContext from \"./contexts/context\";\r\n\r\nexport default function App() {\r\n  const [data, dispatch] = useReducer(dataReducer, initialState);\r\n  return (\r\n    <DataContext.Provider value={{ data, dispatch }}>\r\n      <IndexPage />\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/css/styles.css\";\r\n// import \"./styles/css/open-weather-icons.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}